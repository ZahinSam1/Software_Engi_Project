{"ast":null,"code":"var _jsxFileName = \"C:\\\\All code\\\\Software_Engi_Project\\\\sync-app\\\\src\\\\components\\\\folderInput.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./folderInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderInput = () => {\n  _s();\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\n  const handleFolderSelect = event => {\n    const folder = event.target.files[0];\n    setSelectedFolder(folder ? folder.name : \"\");\n    if (folder) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const jsonData = JSON.parse(e.target.result);\n        console.log(jsonData);\n      };\n      reader.readAsText(folder);\n    }\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const folder = event.dataTransfer.items[0].getAsFile();\n    setSelectedFolder(folder ? folder.name : \"\");\n    if (folder) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const jsonData = JSON.parse(e.target.result);\n        console.log(jsonData);\n      };\n      reader.readAsText(folder);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select a Folder:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-area\",\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop a folder here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      webkitdirectory: \"\",\n      onChange: handleFolderSelect,\n      id: \"folder-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"folder-input\",\n      className: \"browse-button\",\n      children: \"Browse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), selectedFolder && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected folder: \", selectedFolder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(FolderInput, \"zFTlFCZM4HhLGZrzTutDFqB6Csk=\");\n_c = FolderInput;\nexport default FolderInput;\nvar _c;\n$RefreshReg$(_c, \"FolderInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","FolderInput","_s","selectedFolder","setSelectedFolder","handleFolderSelect","event","folder","target","files","name","reader","FileReader","onload","e","jsonData","JSON","parse","result","console","log","readAsText","handleDrop","preventDefault","dataTransfer","items","getAsFile","handleDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","type","webkitdirectory","onChange","id","htmlFor","_c","$RefreshReg$"],"sources":["C:/All code/Software_Engi_Project/sync-app/src/components/folderInput.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./folderInput.css\";\r\n\r\nconst FolderInput = () => {\r\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\r\n\r\n  const handleFolderSelect = (event) => {\r\n    const folder = event.target.files[0];\r\n    setSelectedFolder(folder ? folder.name : \"\");\r\n\r\n    if (folder) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const jsonData = JSON.parse(e.target.result);\r\n        console.log(jsonData);\r\n      };\r\n      reader.readAsText(folder);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const folder = event.dataTransfer.items[0].getAsFile();\r\n    setSelectedFolder(folder ? folder.name : \"\");\r\n\r\n    if (folder) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const jsonData = JSON.parse(e.target.result);\r\n        console.log(jsonData);\r\n      };\r\n      reader.readAsText(folder);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"folder-input-container\">\r\n      <h3>Select a Folder:</h3>\r\n      <div\r\n        className=\"drop-area\"\r\n        onDrop={handleDrop}\r\n        onDragOver={handleDragOver}\r\n      >\r\n        <p>Drag and drop a folder here</p>\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        webkitdirectory=\"\"\r\n        onChange={handleFolderSelect}\r\n        id=\"folder-input\"\r\n      />\r\n      <label htmlFor=\"folder-input\" className=\"browse-button\">\r\n        Browse\r\n      </label>\r\n      {selectedFolder && <p>Selected folder: {selectedFolder}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FolderInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}