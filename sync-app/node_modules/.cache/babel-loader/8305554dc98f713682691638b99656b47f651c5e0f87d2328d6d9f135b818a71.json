{"ast":null,"code":"var _jsxFileName = \"C:\\\\All code\\\\Software_Engi_Project\\\\sync-app\\\\src\\\\components\\\\folderUpload.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderUploader = () => {\n  const handleUpload = async event => {\n    event.preventDefault();\n    const folderInput = event.target.files[0];\n    const formData = new FormData();\n\n    // Append the folder input to the form data\n    formData.append(\"folder\", folderInput);\n    try {\n      const response = await axios.post(\"http://localhost:9000/upload\", formData);\n      console.log(\"Folder uploaded successfully\");\n      console.log(\"Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error uploading folder:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select a Folder to Upload:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      webkitdirectory: \"\",\n      onChange: handleUpload,\n      id: \"folder-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = FolderUploader;\nexport default FolderUploader;\nvar _c;\n$RefreshReg$(_c, \"FolderUploader\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","FolderUploader","handleUpload","event","preventDefault","folderInput","target","files","formData","FormData","append","response","post","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","webkitdirectory","onChange","id","_c","$RefreshReg$"],"sources":["C:/All code/Software_Engi_Project/sync-app/src/components/folderUpload.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FolderUploader = () => {\r\n  const handleUpload = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const folderInput = event.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    // Append the folder input to the form data\r\n    formData.append(\"folder\", folderInput);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:9000/upload\",\r\n        formData\r\n      );\r\n      console.log(\"Folder uploaded successfully\");\r\n      console.log(\"Response:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error uploading folder:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Select a Folder to Upload:</h3>\r\n      <input\r\n        type=\"file\"\r\n        webkitdirectory=\"\"\r\n        onChange={handleUpload}\r\n        id=\"folder-input\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FolderUploader;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACzC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAE/B;IACAD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,WAAW,CAAC;IAEtC,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,8BAA8B,EAC9BJ,QACF,CAAC;MACDK,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAACI,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,eAAe,EAAC,EAAE;MAClBC,QAAQ,EAAEtB,YAAa;MACvBuB,EAAE,EAAC;IAAc;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GAjCIzB,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}