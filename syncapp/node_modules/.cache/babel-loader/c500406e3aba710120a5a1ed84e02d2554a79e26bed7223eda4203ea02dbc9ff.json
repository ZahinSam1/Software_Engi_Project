{"ast":null,"code":"var _jsxFileName = \"C:\\\\All code\\\\Software_Engi_Project\\\\syncapp\\\\src\\\\test\\\\fileStructure.jsx\";\nimport React from \"react\";\nimport { FcFolder, FcFile } from \"react-icons/fc\";\nimport \"./files.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileStruct = data => {\n  const fileShow = data => {};\n  const renderItems = data => {\n    if (!Array.isArray(items)) {\n      return \"nothing to show\"; // or return [] if you prefer an empty array\n    }\n\n    return data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ItemContainer\",\n      children: [item.type === \"folder\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FolderIconContainer\",\n        children: [/*#__PURE__*/_jsxDEV(FcFolder, {\n          className: \"FolderIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FolderName\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FileIconContainer\",\n        children: [/*#__PURE__*/_jsxDEV(FcFile, {\n          className: \"FileIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileName\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), item.children && renderItems(item.children)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FileComponent\",\n    children: data && renderItems(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_c = FileStruct;\nexport default FileStruct;\nvar _c;\n$RefreshReg$(_c, \"FileStruct\");","map":{"version":3,"names":["React","FcFolder","FcFile","jsxDEV","_jsxDEV","FileStruct","data","fileShow","renderItems","Array","isArray","items","map","item","index","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/All code/Software_Engi_Project/syncapp/src/test/fileStructure.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { FcFolder, FcFile } from \"react-icons/fc\";\r\nimport \"./files.css\";\r\n\r\nconst FileStruct = (data ) => {\r\n  const fileShow = (data) => {\r\n\r\n  };\r\n  const renderItems = (data) => {\r\n    if (!Array.isArray(items)) {\r\n      return \"nothing to show\"; // or return [] if you prefer an empty array\r\n    }\r\n    return data.map((item, index) => (\r\n      <div className=\"ItemContainer\" key={index}>\r\n        {item.type === \"folder\" ? (\r\n          <div className=\"FolderIconContainer\">\r\n            <FcFolder className=\"FolderIcon\" />\r\n            <span className=\"FolderName\">{item.name}</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"FileIconContainer\">\r\n            <FcFile className=\"FileIcon\" />\r\n            <span className=\"FileName\">{item.name}</span>\r\n          </div>\r\n        )}\r\n        {item.children && renderItems(item.children)}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return <div className=\"FileComponent\">{data && renderItems(data)}</div>;\r\n};\r\n\r\nexport default FileStruct;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,gBAAgB;AACjD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,UAAU,GAAIC,IAAI,IAAM;EAC5B,MAAMC,QAAQ,GAAID,IAAI,IAAK,CAE3B,CAAC;EACD,MAAME,WAAW,GAAIF,IAAI,IAAK;IAC5B,IAAI,CAACG,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,EAAE;MACzB,OAAO,iBAAiB,CAAC,CAAC;IAC5B;;IACA,OAAOL,IAAI,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BV,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BH,IAAI,CAACI,IAAI,KAAK,QAAQ,gBACrBb,OAAA;QAAKW,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCZ,OAAA,CAACH,QAAQ;UAACc,SAAS,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnCjB,OAAA;UAAMW,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEH,IAAI,CAACS;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,gBAENjB,OAAA;QAAKW,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCZ,OAAA,CAACF,MAAM;UAACa,SAAS,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/BjB,OAAA;UAAMW,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEH,IAAI,CAACS;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACN,EACAR,IAAI,CAACG,QAAQ,IAAIR,WAAW,CAACK,IAAI,CAACG,QAAQ,CAAC;IAAA,GAZVF,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAapC,CACN,CAAC;EACJ,CAAC;EAED,oBAAOjB,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAC,QAAA,EAAEV,IAAI,IAAIE,WAAW,CAACF,IAAI;EAAC;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzE,CAAC;AAACE,EAAA,GA3BIlB,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}