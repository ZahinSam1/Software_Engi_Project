{"ast":null,"code":"var _jsxFileName = \"C:\\\\All code\\\\Software_Engi_Project\\\\syncapp\\\\src\\\\components\\\\Dashboard\\\\Statistics\\\\statisticsbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst StatisticsBar = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Users Gained\",\n      data: [],\n      backgroundColor: [\"#077094\", \"#0093A9\", \"#33B7B5\", \"#70D9B8\", \"#eb7f6cbc\"],\n      borderColor: \"#ABA9BB\",\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://ec2-13-53-39-206.eu-north-1.compute.amazonaws.com:9000/testAPI\");\n      const userData = response.data;\n      const labels = userData.map(data => monthNames[data.month - 1]);\n      const dataPoints = userData.map(data => data.userGain);\n      const updatedChartData = {\n        ...chartData,\n        labels,\n        datasets: [{\n          ...chartData.datasets[0],\n          data: dataPoints\n        }]\n      };\n      setChartData(updatedChartData);\n    } catch (error) {\n      console.log(\"Error fetching data:\", error);\n    }\n  };\n  const options = {\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Months\"\n        },\n        ticks: {\n          autoSkip: false\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Number of Users\"\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: \"top\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StatisticsBar\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsBar, \"RKgI9+CMCfsxjHEaRWvjW4apHqU=\");\n_c = StatisticsBar;\nexport default StatisticsBar;\n\n// Please ensure that the API response includes a property representing the month index, or adjust the mapping logic accordingly based on the structure of your API response.\n// It seems the issue lies in the mapping of the month property from the API response. Please make sure the API response contains a property named month with values representing the month index (1 to 12).\n// If the API response doesn't include the month property, or if the property represents the month differently, you will need to adjust the mapping logic accordingly.\nvar _c;\n$RefreshReg$(_c, \"StatisticsBar\");","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","jsxDEV","_jsxDEV","monthNames","StatisticsBar","_s","chartData","setChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","fetchData","response","get","userData","map","month","dataPoints","userGain","updatedChartData","error","console","log","options","scales","x","title","display","text","ticks","autoSkip","y","plugins","legend","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/All code/Software_Engi_Project/syncapp/src/components/Dashboard/Statistics/statisticsbar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst StatisticsBar = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Users Gained\",\r\n        data: [],\r\n        backgroundColor: [\r\n          \"#077094\",\r\n          \"#0093A9\",\r\n          \"#33B7B5\",\r\n          \"#70D9B8\",\r\n          \"#eb7f6cbc\",\r\n        ],\r\n        borderColor: \"#ABA9BB\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://ec2-13-53-39-206.eu-north-1.compute.amazonaws.com:9000/testAPI\");\r\n      const userData = response.data;\r\n\r\n      const labels = userData.map((data) => monthNames[data.month - 1]);\r\n      const dataPoints = userData.map((data) => data.userGain);\r\n\r\n      const updatedChartData = {\r\n        ...chartData,\r\n        labels,\r\n        datasets: [\r\n          {\r\n            ...chartData.datasets[0],\r\n            data: dataPoints,\r\n          },\r\n        ],\r\n      };\r\n\r\n      setChartData(updatedChartData);\r\n    } catch (error) {\r\n      console.log(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Months\",\r\n        },\r\n        ticks: {\r\n          autoSkip: false,\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Number of Users\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"top\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"StatisticsBar\">\r\n      <Bar data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsBar;\r\n\r\n\r\n// Please ensure that the API response includes a property representing the month index, or adjust the mapping logic accordingly based on the structure of your API response.\r\n// It seems the issue lies in the mapping of the month property from the API response. Please make sure the API response contains a property named month with values representing the month index (1 to 12).\r\n// If the API response doesn't include the month property, or if the property represents the month differently, you will need to adjust the mapping logic accordingly."],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAG,CACjB,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACzCU,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,WAAW,CACZ;MACDC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACdkB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,uEAAuE,CAAC;MACzG,MAAMC,QAAQ,GAAGF,QAAQ,CAACL,IAAI;MAE9B,MAAMH,MAAM,GAAGU,QAAQ,CAACC,GAAG,CAAER,IAAI,IAAKR,UAAU,CAACQ,IAAI,CAACS,KAAK,GAAG,CAAC,CAAC,CAAC;MACjE,MAAMC,UAAU,GAAGH,QAAQ,CAACC,GAAG,CAAER,IAAI,IAAKA,IAAI,CAACW,QAAQ,CAAC;MAExD,MAAMC,gBAAgB,GAAG;QACvB,GAAGjB,SAAS;QACZE,MAAM;QACNC,QAAQ,EAAE,CACR;UACE,GAAGH,SAAS,CAACG,QAAQ,CAAC,CAAC,CAAC;UACxBE,IAAI,EAAEU;QACR,CAAC;MAEL,CAAC;MAEDd,YAAY,CAACgB,gBAAgB,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAMG,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR,CAAC;QACDC,KAAK,EAAE;UACLC,QAAQ,EAAE;QACZ;MACF,CAAC;MACDC,CAAC,EAAE;QACDL,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDI,OAAO,EAAE;MACPC,MAAM,EAAE;QACNN,OAAO,EAAE,IAAI;QACbO,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EAED,oBACEpC,OAAA;IAAKqC,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BtC,OAAA,CAACH,GAAG;MAACY,IAAI,EAAEL,SAAU;MAACqB,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACvC,EAAA,CAhFID,aAAa;AAAAyC,EAAA,GAAbzC,aAAa;AAkFnB,eAAeA,aAAa;;AAG5B;AACA;AACA;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}